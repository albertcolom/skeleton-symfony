services:
  php-fpm:
    build:
      context: resources/infrastructure/docker/php-fpm/
      args:
        ALPINE_PHP_FPM_VERSION: 8.2
        COMPOSER_VERSION: latest
    container_name: php-fpm_container
    environment:
      - TZ=Europe/Berlin
      - PHP_IDE_CONFIG=serverName=DockerApp
    volumes:
      - .:/var/www
    working_dir: /var/www
    logging:
      driver: "fluentd"
      options:
        fluentd-async-connect: 'true'
        tag: app
    networks:
      - docker-network

  nginx:
    image: nginx:alpine3.17-slim
    container_name: nginx_container
    ports:
      - "8000:80"
    environment:
      - TZ=Europe/Berlin
    volumes:
      - ./resources/infrastructure/docker/nginx/site.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/html
    depends_on:
      - php-fpm
      - fluent-bit
    logging:
      driver: "fluentd"
      options:
        fluentd-async-connect: 'true'
        tag: nginx
    networks:
      - docker-network

  mariadb:
    image: mariadb:11.0
    container_name: mariadb_container
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=app
      - MYSQL_ROOT_PASSWORD=root
      - TZ=Europe/Berlin
    volumes:
      - ./var/volume/mariadb:/var/lib/mariadb
    networks:
      - docker-network

  swagger_ui:
    image: swaggerapi/swagger-ui:v4.0.0-rc.1
    container_name: swagger-ui_container
    ports:
      - "8001:8080"
    volumes:
      - ./resources/openapi:/usr/share/nginx/html/doc
    environment:
      API_URL: doc/api-doc.yaml

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq_container
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    networks:
      - docker-network

  zookeeper:
    image: zookeeper:3.8.1
    container_name: zookeeper_container
    ports:
      - "2181:2181"
    networks:
      - docker-network

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka_container
    environment:
      KAFKA_BROKER_ID : 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    ports:
      - "9093:9093"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - docker-network

  redis:
    image: redis:7.0-alpine
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - docker-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: elasticsearch_container
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./var/volume/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - node.name=es01
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - docker-network

  fluent-bit:
    image: fluent/fluent-bit:2.1
    container_name: fluent-bit_container
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    environment:
      FLUENT_ELASTICSEARCH_HOST: elasticsearch
      FLUENT_ELASTICSEARCH_PORT: 9200
      ENV: dev
    volumes:
      - ./resources/infrastructure/docker/fluent-bit/:/fluent-bit/etc/
    depends_on:
      - elasticsearch
    networks:
      - docker-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: kibana_container
    ports:
      - "5601:5601"
    environment:
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "false"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    depends_on:
      - elasticsearch
    networks:
      - docker-network

networks:
  docker-network:
    driver: bridge
